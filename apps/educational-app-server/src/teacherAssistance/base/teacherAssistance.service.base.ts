/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TeacherAssistance as PrismaTeacherAssistance,
} from "@prisma/client";

export class TeacherAssistanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TeacherAssistanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.teacherAssistance.count(args);
  }

  async teacherAssistances(
    args: Prisma.TeacherAssistanceFindManyArgs
  ): Promise<PrismaTeacherAssistance[]> {
    return this.prisma.teacherAssistance.findMany(args);
  }
  async teacherAssistance(
    args: Prisma.TeacherAssistanceFindUniqueArgs
  ): Promise<PrismaTeacherAssistance | null> {
    return this.prisma.teacherAssistance.findUnique(args);
  }
  async createTeacherAssistance(
    args: Prisma.TeacherAssistanceCreateArgs
  ): Promise<PrismaTeacherAssistance> {
    return this.prisma.teacherAssistance.create(args);
  }
  async updateTeacherAssistance(
    args: Prisma.TeacherAssistanceUpdateArgs
  ): Promise<PrismaTeacherAssistance> {
    return this.prisma.teacherAssistance.update(args);
  }
  async deleteTeacherAssistance(
    args: Prisma.TeacherAssistanceDeleteArgs
  ): Promise<PrismaTeacherAssistance> {
    return this.prisma.teacherAssistance.delete(args);
  }
}
